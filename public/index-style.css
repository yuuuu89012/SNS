@import url('https://fonts.googleapis.com/css?family=M+PLUS+Rounded+1c');


body {
  font-family: 'M PLUS Rounded 1c', sans-serif;
  background-color: #FFFCFC;
  margin: 0;
  padding: 0;
}

header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-image: linear-gradient(90deg, #F2858E, rgba(191, 233, 255, 1));
    padding: 10px 20px;
    height:150px;
}
a {
    text-decoration: none;
}
  

.logo img{
    height: 150px;
    width:150px;
    position:fixed;
    top: 10px; /* 画面上部からの距離 */
    left: 10px; /* 画面左からの距離 */
    z-index: 1000; /* 他の要素の上に表示 */
}

.search-bar input {
    padding: 5px;
    height: 30px;
    border-radius: 30px;
    background-color: #a03c57;
    color:#ffffff;
    border: none;
    outline: none;
    padding-left:30px;
}

.search-bar {
    display: inline-block; /* なくても大丈夫だけど、念の為 */
    position: relative;    /* 基準値とする */
    padding-left: 20px;
    left:150px;

  }
  .search-bar::before {
    content: "";           /* 疑似要素に必須 */
    width: 16px;           /* アイコンの横幅 */
    height: 16px;          /* アイコンの高さ */
    background: url(./search.png) no-repeat center center / auto 100%; /* 背景にアイコン画像を配置 */
    display: inline-block; /* 高さを持たせるためにインラインブロック要素にする */
    position: absolute;    /* 相対位置に指定 */
    top: 12px;              /* アイコンの位置。微調整してね */
    left: 28px;             /* アイコンの位置。微調整してね */
  }


.user-menu {
    display: flex;
    align-items: center;
}

.user-menu img {
    height: 30px;
    margin-left: 10px;
    cursor: pointer;
}

.menu-icon {
    width: 30px;
    height: 25px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    cursor: pointer;
    margin-left: 10px;
}

.menu-icon div {
    width: 100%;
    height: 4px;
    background-color: #000;
    border-radius: 2px;
}

nav {
    padding: 10px 0;
}

nav ul {
    display: flex;
    justify-content: center; /* Center align the items */
    list-style-type: none;
    padding: 0 20px;
    margin: 0;
}

nav li {
    font-size: 16px;
    margin: 0 20px; /* Reduce the space between items */
    cursor: pointer;
}
nav li.inactive {
    color: #ccc; /* 非アクティブな項目の色 */
}
#nav-categories {
  list-style: none;
  padding: 0;
}

#nav-categories li {
  position: relative;
  padding: 10px;
  cursor: pointer;
}

#nav-categories li::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  height: 2px; /* 下線の高さ */
  background-color: rgba(191, 233, 255, 1); /* 下線の色 */
  transform: scaleX(0); /* 初期状態で非表示 */
  transition: transform 0.3s ease; /* アニメーション */
}

#nav-categories li:hover::after,
#nav-categories li.selected::after {
  transform: scaleX(1); /* ホバーまたは選択時に表示 */
}


main {
    display: flex;
    justify-content: center;
    padding: 20px;
}

.posts {
    width: 43%;
}


.post-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.follow-btn {
    background-color: #0367A6;
    border: none;
    padding: 10px 40px;
    color: #ffffff;
    cursor: pointer;
    border-radius: 40px;
}


.post-img img {
    width: 600px; /* 親要素の幅に合わせる */
    height: 400px; /* 高さを自動調整 */
    object-fit: cover; /* 画像が枠にフィットするように切り取る */
}



.post-actions span {
    margin-right: 10px;
}

.post-text {
    flex: 1;
}



.post-img{
    max-width: 100%; /* 親要素の幅に合わせる */
    height: auto; /* 高さは自動調整 */
    max-width: 200px; /* 最大幅を設定 */
    object-fit: cover; /* 画像が枠にフィットするように切り取る */
    justify-content: center; /* 中央揃え */
    
}
nav li.inactive {
    color: #ccc; /* 非アクティブな項目の色 */
}





input[type="checkbox"] {
  display: none;
}

.humbtn {
  background: #023373;
  border: none;
  border-radius: 50%;
  width: 45px;
  height: 45px;
}
.humbtn svg {
  position: relative;
  top: 1px;
  right: 1px;
}
.humbtn--large {
  width: 60px;
  height: 60px;
}
.humbtn--menu:after,.humbtn--menu:before {
  content: "";
  display: block;
  width: 25px;
  height: 3px;
  background: #F9F9F8;
  position: absolute;
  top: 29px;
  left: 18px;
  transition: transform 600ms;
}
.humbtn--menu:after {
  transform: translateY(-5px);
}
.humbtn--menu:before {
  transform: translateY(5px);
}
.humbtn--share {
  background-color: #0367A6;
}
.humbtn--star {
  background-color: #0367A6;
}
.humbtn--comment {
  background-color: #0367A6;
}
.actions-menu {
  position: fixed;
  width: 60px;
  height: 60px;
  right: 30px;
  bottom: 30px;
}
.actions-menu .humbtn {
  position: absolute;
  top: 8px;
  left: 8px;
  opacity: 0;
  transition: top 1000ms cubic-bezier(0.175, 0.885, 0.32, 1.275),
              left 1000ms cubic-bezier(0.175, 0.885, 0.32, 1.275),
              opacity 200ms;
}
.actions-menu .humbtn--menu {
  position: absolute;
  opacity: 1;
  top: 0;
  left: 0;
  z-index: 0;
}
.humbtn--menu, #actionMenuButton:checked + .actions-menu > .humbtn {
  opacity: 1;
  box-shadow: 0 5px 20px rgba(0,0,0,0.2);
}
#actionMenuButton:checked + .actions-menu > .humbtn--menu:after {
  transform: rotate(45deg);
}
#actionMenuButton:checked + .actions-menu > .humbtn--menu:before {
  transform: rotate(-45deg);
}
#actionMenuButton:checked + .actions-menu > .humbtn--share {
  top: -70px;
}
#actionMenuButton:checked + .actions-menu > .humbtn--star {
  top: -50px;
  left: -50px;
}
#actionMenuButton:checked + .actions-menu > .humbtn--comment {
  left: -70px;
}


.post-img {
  max-width: 100%; /* 画像が親要素を超えないようにする */
  height: auto; /* 高さは自動調整 */
  display: flex; /* Flexboxを使用 */
  justify-content: center; /* 中央揃え */
  padding:20px;
}

.btn{
  color: #888;
  background-color: transparent;
  border: 0.1em solid;
  border-radius: 1em;
  padding: 0.333em 1em 0.25em;
  line-height: 1.2em;
  cursor: pointer;
  transition: color 150ms ease-in-out, background-color 150ms ease-in-out, transform 150ms ease-in-out;
  outline: 0;
  }
  .likeButton__icon {
  display: inline-block;
  fill: currentColor;
  width: 0.8em;
  height: 0.8em;
  margin-right: 0.2em;
  }
.btn:hover {
color: #F2858E;
}

.btn1{
  color: #F2858E;
  background-color: transparent;
  border: 0.1em solid;
  border-radius: 1em;
  padding: 0.333em 1em 0.25em;
  line-height: 1.2em;
  cursor: pointer;
  transition: color 150ms ease-in-out, background-color 150ms ease-in-out, transform 150ms ease-in-out;
  outline: 0;
  }